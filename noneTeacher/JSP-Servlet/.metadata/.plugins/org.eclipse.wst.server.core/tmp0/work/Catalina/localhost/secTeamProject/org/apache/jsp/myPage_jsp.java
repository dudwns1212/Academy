/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-08-19 04:35:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1755577915330L));
    _jspx_dependants.put("jar:file:/C:/academi/JSP-Servlet/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/secTeamProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1755577916921L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>마이페이지 - LX CINEMA</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* --- 1. body 태그 스타일 (수정) --- */\r\n");
      out.write("/* body에서는 전체 폰트와 글자색 등 기본 스타일만 남깁니다. */\r\n");
      out.write("body {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("    background-color: #000; /* 페이지 기본 배경색은 검정으로 설정 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --- 2. 배경 이미지를 적용할 전체 래퍼(wrapper) 스타일 (추가) --- */\r\n");
      out.write("/* body에 있던 배경 이미지 관련 스타일을 이곳으로 옮깁니다. */\r\n");
      out.write(".page-wrapper {\r\n");
      out.write("    background-image: url('asset/images/mypageback.jpg'); \r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    background-position: center top; /* 이미지의 상단이 잘리지 않도록 top으로 조정 */\r\n");
      out.write("    background-repeat: no-repeat;\r\n");
      out.write("    /* background-attachment: fixed; 이 속성은 필요 시 사용 */\r\n");
      out.write("    \r\n");
      out.write("    /* 이미지 위에 어두운 오버레이를 씌우는 더 안정적인 방법 */\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write(".page-wrapper::before {\r\n");
      out.write("    content: '';\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    right: 0;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    background-color: rgba(0, 0, 0, 0.7); /* 어두운 오버레이 효과 */\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("/* 헤더와 메인 컨테이너가 오버레이 위에 오도록 z-index 설정 */\r\n");
      out.write(".header-container, .register-container {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* --- 3. 헤더 스타일 (기존 스타일 유지) --- */\r\n");
      out.write(".header-container, .header-inner {\r\n");
      out.write("    background: none !important; /* 헤더의 검은 배경을 완전히 제거 */\r\n");
      out.write("}\r\n");
      out.write(".header-inner {\r\n");
      out.write("    border-bottom: 1px solid rgba(255, 255, 255, 0.2); \r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 20px 0 60px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".header-inner h1 {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write(".user-section {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 10px;\r\n");
      out.write("    top: 20px;\r\n");
      out.write("    font-size: 0.8rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write(".user-section button {\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 1px solid #666;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 5px 12px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("    margin-top: 15px\r\n");
      out.write("}\r\n");
      out.write(".user-section button:hover {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("}\r\n");
      out.write(".user-name {\r\n");
      out.write("	color: orange;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    margin-top: 14px;\r\n");
      out.write("}\r\n");
      out.write(".ticketing_menu {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 15px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write(".ticketing_menu button {\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 1px solid #666;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 8px 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("}\r\n");
      out.write(".ticketing_menu button:hover {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("}\r\n");
      out.write(".logo button {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("    left: 6px;\r\n");
      out.write("    top: 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    margin-top: 2px;\r\n");
      out.write("}\r\n");
      out.write(".logo img {\r\n");
      out.write("	width: 70px;\r\n");
      out.write("	height: 70px;\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --- 4. 마이페이지 고유 스타일 (기존 스타일 유지) --- */\r\n");
      out.write(".main-container {\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    padding: 40px 20px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".page-title {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 100px;\r\n");
      out.write("    padding-top: 50px;\r\n");
      out.write("}\r\n");
      out.write(".page-title h1 {\r\n");
      out.write("    font-size: 2rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    background: linear-gradient(45deg, #E74C3C, #FF6B9D);\r\n");
      out.write("    -webkit-background-clip: text;\r\n");
      out.write("    -webkit-text-fill-color: transparent;\r\n");
      out.write("    background-clip: text;\r\n");
      out.write("}\r\n");
      out.write(".page-title p {\r\n");
      out.write("    margin: 10px 0 0;\r\n");
      out.write("    color: #999;\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("}\r\n");
      out.write(".current-user-info {\r\n");
      out.write("    background: linear-gradient(45deg, #E74C3C, #FF6B9D);\r\n");
      out.write("    color: white;\r\n");
      out.write("    border-radius: 30px;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    max-width: 650px;\r\n");
      out.write("    margin-left: auto;\r\n");
      out.write("    margin-right: auto;\r\n");
      out.write("}\r\n");
      out.write(".current-user-info h3 { margin: 0; font-size: 1.2rem; }\r\n");
      out.write(".current-user-info p { margin: 5px 0 0; opacity: 0.9; }\r\n");
      out.write(".card-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 30px;\r\n");
      out.write("}\r\n");
      out.write(".edit-card, .check-card {\r\n");
      out.write("    width: 300px;\r\n");
      out.write("    background-color: #1a1a1a;\r\n");
      out.write("    border-radius: 15px;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border: 1px solid #333;\r\n");
      out.write("}\r\n");
      out.write(".edit-card h3, .check-card h3 { margin: 0 0 15px 0; font-size: 1.5rem; color: #fff; }\r\n");
      out.write(".edit-card p, .check-card p { margin: 0 0 25px 0; color: #999; font-size: 0.93rem; line-height: 1.5; font-weight: 700; }\r\n");
      out.write(".card-button {\r\n");
      out.write("    width: 100%; padding: 12px 20px; background: linear-gradient(45deg, #E74C3C, #FF6B9D);\r\n");
      out.write("    color: white; border: none; border-radius: 8px; font-size: 1rem; font-weight: 600;\r\n");
      out.write("}\r\n");
      out.write("#edit {\r\n");
      out.write("    height: 40px; width: 100%; margin-bottom: 5px; padding: 12px 20px; border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 새로 추가한 page-wapper 이걸로 컨트롤 했음 -->\r\n");
      out.write("<div class=\"page-wrapper\">\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* 헤더 컨테이너 */\r\n");
      out.write("body {\r\n");
      out.write("    background-color: black;\r\n");
      out.write("}\r\n");
      out.write(".header-container {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: rgba(0, 0, 0, 0.9);\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 실제 검은색 배경 영역 */\r\n");
      out.write(".header-inner {\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    background-color: #000;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 20px 0 60px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .en {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    color: #FF7961;\r\n");
      out.write("    font-size: 1.6rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .ko {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-size: 1.3rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 */\r\n");
      out.write(".underline {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-bottom: 2px solid #666;\r\n");
      out.write("    margin: 20px auto 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로그인/회원정보 영역 */\r\n");
      out.write(".user-section {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 10px;\r\n");
      out.write("    top: 20px;\r\n");
      out.write("    font-size: 0.8rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button {\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 1px solid #666;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 5px 12px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button:hover {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사용자 이름 */\r\n");
      out.write(".user-name {\r\n");
      out.write("    color: orange;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    margin-top: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로고 */\r\n");
      out.write(".logo button {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 6px;\r\n");
      out.write("    top: 16px;\r\n");
      out.write("    background-color: black;\r\n");
      out.write("    border: none;\r\n");
      out.write("    margin-top: 2px;\r\n");
      out.write("}\r\n");
      out.write(".logo img {\r\n");
      out.write("    width: 70px;\r\n");
      out.write("    height: 70px;\r\n");
      out.write("    border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 아래 메뉴 */\r\n");
      out.write(".ticketing_menu {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 18px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 8px 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    transition: color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 슬라이딩 밑줄 */\r\n");
      out.write(".ticketing_menu button::after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    width: 0;\r\n");
      out.write("    height: 3px;\r\n");
      out.write("    background-color: Orange;\r\n");
      out.write("    border-radius: 2px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("    transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 호버 시 밑줄 확장 및 글자 색상 변경 */\r\n");
      out.write(".ticketing_menu button:hover {\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button:hover::after {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"header-container\">\r\n");
      out.write("    <div class=\"header-inner\">\r\n");
      out.write("        <!-- 로고 -->\r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("            <form action=\"home.do\">\r\n");
      out.write("                <button type=\"submit\"><img src=\"asset/images/lxcinema.png\"></button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 사용자 섹션 -->\r\n");
      out.write("        <div class=\"user-section\">\r\n");
      out.write("            ");
 
            userList.UserListVO loginUser = (userList.UserListVO)session.getAttribute("loginUser");
            if (loginUser != null) { 
            
      out.write("\r\n");
      out.write("                <span class=\"user-name\">");
      out.print(loginUser.getUserName());
      out.write("님</span>\r\n");
      out.write("                <form action=\"myPage.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">마이페이지</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"logout.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그아웃</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 
            } else { 
            
      out.write("\r\n");
      out.write("                <form action=\"login.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그인</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"register.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">회원가입</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 사이트명 -->\r\n");
      out.write("        <h1 class=\"brand\">\r\n");
      out.write("            <a href=\"home.do\" style=\"color: inherit; text-decoration: none;\">\r\n");
      out.write("                <div class=\"en\">LX-CINEMA</div>\r\n");
      out.write("                <div class=\"ko\">공간 시네마</div>\r\n");
      out.write("            </a>\r\n");
      out.write("        </h1>\r\n");
      out.write("\r\n");
      out.write("        <!-- 언더라인 -->\r\n");
      out.write("        <div class=\"underline\"></div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 메뉴 -->\r\n");
      out.write("        <div class=\"ticketing_menu\">\r\n");
      out.write("            <form action=\"MovieListServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">예매</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"MovieGalleryServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">영화</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"event.do\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">이벤트</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"register-container\">\r\n");
      out.write("        <div class=\"main-container\">\r\n");
      out.write("            <div class=\"page-title\">\r\n");
      out.write("                <h1>마이페이지</h1>\r\n");
      out.write("                <p>회원정보 관리 및 예매 내역을 확인하세요</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        \r\n");
      out.write("            ");

            userList.UserListVO currentUser = (userList.UserListVO)session.getAttribute("loginUser");
            
      out.write("\r\n");
      out.write("            <div class=\"current-user-info\">\r\n");
      out.write("                <h3>환영합니다, ");
      out.print(currentUser.getUserName());
      out.write("님!</h3>\r\n");
      out.write("                <p>회원 ID: ");
      out.print(currentUser.getUserId());
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"edit-card\">\r\n");
      out.write("                    <h3>회원정보 수정</h3>\r\n");
      out.write("                    <p>비밀번호를 확인하고 회원정보를 수정하세요</p>\r\n");
      out.write("                    <form action=\"checkPw.do\" method=\"post\">            	\r\n");
      out.write("                        <input type=\"password\" name=\"pw\" id=\"edit\" placeholder=\"비밀번호를 입력하세요\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"userNo\" value=\"");
      out.print(currentUser.getUserNo());
      out.write("\">\r\n");
      out.write("                        <button type=\"submit\" class=\"card-button\">정보 수정</button>\r\n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"check-card\">\r\n");
      out.write("                    <h3>예매 확인</h3>\r\n");
      out.write("                    <p>여기서 예매한 내역를 확인하세요</p>\r\n");
      out.write("                    <form action=\"history.do\">\r\n");
      out.write("                        <button type=\"submit\" class=\"card-button\">예매 내역</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/bottom.jsp", out, false);
      out.write(" \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /myPage.jsp(225,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty errorMsg}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                            <p class=\"error-msg\" style=\"color: red;\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMsg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</p>\r\n");
        out.write("                        ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
