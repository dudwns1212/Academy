/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-08-19 04:35:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import movieList.MovieListVO;
import java.time.LocalDateTime;

public final class reserve_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:contains", org.apache.taglibs.standard.functions.Functions.class, "contains", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1755577915330L));
    _jspx_dependants.put("jar:file:/C:/academi/JSP-Servlet/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/secTeamProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/academi/JSP-Servlet/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/secTeamProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1755577916921L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("movieList.MovieListVO");
    _jspx_imports_classes.add("java.time.LocalDateTime");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<title>예매</title>\r\n");
      out.write("<!-- jQuery 라이브러리 추가 -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(":root {\r\n");
      out.write("	--bg: #000000;\r\n");
      out.write("	--card: #ffffff;\r\n");
      out.write("	--line: #e0e0e0;\r\n");
      out.write("	--txt: #333333;\r\n");
      out.write("	--muted: #666666;\r\n");
      out.write("	--accent: #ff6b35;\r\n");
      out.write("	--radius: 8px;\r\n");
      out.write("	--red-accent: #ff0000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	background-color: var(--bg);\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	font-family: system-ui, -apple-system, Segoe UI, Roboto, \"Noto Sans KR\",\r\n");
      out.write("		sans-serif;\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: inherit\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	max-width: 1200px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 20px 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	margin: 20px 0;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".grid {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: 280px 1fr 300px;\r\n");
      out.write("	gap: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".panel {\r\n");
      out.write("	background: var(--card);\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	border: 1px solid var(--line);\r\n");
      out.write("	border-radius: var(--radius);\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	min-height: 600px;\r\n");
      out.write("	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".panel h3 {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 40px;\r\n");
      out.write("	border-bottom: 1px solid var(--line);\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".panel .body {\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	max-height: 70vh;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 버튼 스타일 */\r\n");
      out.write(".btn {\r\n");
      out.write("	display: inline-flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("	padding: 12px 16px;\r\n");
      out.write("	border-radius: 6px;\r\n");
      out.write("	border: 1px solid var(--line);\r\n");
      out.write("	background: white;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: all 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn:hover {\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.active {\r\n");
      out.write("	background-color: var(--accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie.active {\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.block {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-bottom: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.ghost {\r\n");
      out.write("	background: white;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.ghost:hover {\r\n");
      out.write("	background: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.pill {\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.small {\r\n");
      out.write("	padding: 8px 12px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn[disabled] {\r\n");
      out.write("	opacity: 0.5;\r\n");
      out.write("	cursor: not-allowed;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 목록 */\r\n");
      out.write(".list {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tag {\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	margin: 16px 0 8px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 영화 카드 */\r\n");
      out.write(".movie {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	gap: 12px;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 16px;\r\n");
      out.write("	border: 2px solid var(--line);\r\n");
      out.write("	border-radius: var(--radius);\r\n");
      out.write("	margin-bottom: 12px;\r\n");
      out.write("	transition: all 0.2s;\r\n");
      out.write("	background: white;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie:hover {\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie img {\r\n");
      out.write("	width: 60px;\r\n");
      out.write("	height: 80px;\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	background: #f0f0f0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie .content {\r\n");
      out.write("	flex: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie .title {\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	margin-bottom: 4px;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie .info {\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	color: var(--muted);\r\n");
      out.write("	margin-bottom: 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 날짜 선택 */\r\n");
      out.write(".date-list {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("	margin-bottom: 16px;\r\n");
      out.write("	flex-wrap: wrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".date-btn {\r\n");
      out.write("	background: white;\r\n");
      out.write("	border: 1px solid var(--line);\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	padding: 10px 16px;\r\n");
      out.write("	border-radius: 6px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	transition: all 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".date-btn:hover {\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".date-btn.active {\r\n");
      out.write("	background: var(--accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 시간 목록 */\r\n");
      out.write(".time-list {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-wrap: wrap;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("	margin-top: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time {\r\n");
      out.write("	padding: 8px 12px;\r\n");
      out.write("	border: 1px solid var(--line);\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	background: white;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: all 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time.active {\r\n");
      out.write("	background: var(--accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time:hover {\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("	background: #fff5f0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time.active:hover {\r\n");
      out.write("	background: #e55a2b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".selected-date {\r\n");
      out.write("	color: var(--muted);\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-bottom: 16px;\r\n");
      out.write("	padding: 8px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr.line {\r\n");
      out.write("	border: 0;\r\n");
      out.write("	border-top: 1px solid var(--line);\r\n");
      out.write("	margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".empty-state {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 60px 20px;\r\n");
      out.write("	color: var(--muted);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 최종 버튼 */\r\n");
      out.write(".final-btn {\r\n");
      out.write("	background: var(--red-accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 16px;\r\n");
      out.write("	border-radius: 6px;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: all 0.2s;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".final-btn:hover {\r\n");
      out.write("	background: #e60000;\r\n");
      out.write("	transform: translateY(-1px);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* ★★★ 수정된 지역/영화관 선택 스타일 ★★★ */\r\n");
      out.write(".region-section .btn {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	justify-content: flex-start;\r\n");
      out.write("	background: white;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	border: 2px solid var(--line);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".region-section .btn:hover {\r\n");
      out.write("	background: #f8f9fa;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".region-section .btn.active {\r\n");
      out.write("	background: var(--accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cinema-section .btn.ghost {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	justify-content: flex-start;\r\n");
      out.write("	background: white;\r\n");
      out.write("	color: var(--txt);\r\n");
      out.write("	border: 2px solid var(--line);\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cinema-section .btn.ghost:hover {\r\n");
      out.write("	background: #f8f9fa;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cinema-section .btn.ghost.active {\r\n");
      out.write("	background: var(--accent);\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-color: var(--accent);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* 헤더 컨테이너 */\r\n");
      out.write("body {\r\n");
      out.write("    background-color: black;\r\n");
      out.write("}\r\n");
      out.write(".header-container {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: rgba(0, 0, 0, 0.9);\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 실제 검은색 배경 영역 */\r\n");
      out.write(".header-inner {\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    background-color: #000;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 20px 0 60px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .en {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    color: #FF7961;\r\n");
      out.write("    font-size: 1.6rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .ko {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-size: 1.3rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 */\r\n");
      out.write(".underline {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-bottom: 2px solid #666;\r\n");
      out.write("    margin: 20px auto 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로그인/회원정보 영역 */\r\n");
      out.write(".user-section {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 10px;\r\n");
      out.write("    top: 20px;\r\n");
      out.write("    font-size: 0.8rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button {\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 1px solid #666;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 5px 12px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button:hover {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사용자 이름 */\r\n");
      out.write(".user-name {\r\n");
      out.write("    color: orange;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    margin-top: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로고 */\r\n");
      out.write(".logo button {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 6px;\r\n");
      out.write("    top: 16px;\r\n");
      out.write("    background-color: black;\r\n");
      out.write("    border: none;\r\n");
      out.write("    margin-top: 2px;\r\n");
      out.write("}\r\n");
      out.write(".logo img {\r\n");
      out.write("    width: 70px;\r\n");
      out.write("    height: 70px;\r\n");
      out.write("    border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 아래 메뉴 */\r\n");
      out.write(".ticketing_menu {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 18px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 8px 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    transition: color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 슬라이딩 밑줄 */\r\n");
      out.write(".ticketing_menu button::after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    width: 0;\r\n");
      out.write("    height: 3px;\r\n");
      out.write("    background-color: Orange;\r\n");
      out.write("    border-radius: 2px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("    transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 호버 시 밑줄 확장 및 글자 색상 변경 */\r\n");
      out.write(".ticketing_menu button:hover {\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button:hover::after {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"header-container\">\r\n");
      out.write("    <div class=\"header-inner\">\r\n");
      out.write("        <!-- 로고 -->\r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("            <form action=\"home.do\">\r\n");
      out.write("                <button type=\"submit\"><img src=\"asset/images/lxcinema.png\"></button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 사용자 섹션 -->\r\n");
      out.write("        <div class=\"user-section\">\r\n");
      out.write("            ");
 
            userList.UserListVO loginUser = (userList.UserListVO)session.getAttribute("loginUser");
            if (loginUser != null) { 
            
      out.write("\r\n");
      out.write("                <span class=\"user-name\">");
      out.print(loginUser.getUserName());
      out.write("님</span>\r\n");
      out.write("                <form action=\"myPage.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">마이페이지</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"logout.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그아웃</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 
            } else { 
            
      out.write("\r\n");
      out.write("                <form action=\"login.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그인</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"register.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">회원가입</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 사이트명 -->\r\n");
      out.write("        <h1 class=\"brand\">\r\n");
      out.write("            <a href=\"home.do\" style=\"color: inherit; text-decoration: none;\">\r\n");
      out.write("                <div class=\"en\">LX-CINEMA</div>\r\n");
      out.write("                <div class=\"ko\">공간 시네마</div>\r\n");
      out.write("            </a>\r\n");
      out.write("        </h1>\r\n");
      out.write("\r\n");
      out.write("        <!-- 언더라인 -->\r\n");
      out.write("        <div class=\"underline\"></div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 메뉴 -->\r\n");
      out.write("        <div class=\"ticketing_menu\">\r\n");
      out.write("            <form action=\"MovieListServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">예매</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"MovieGalleryServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">영화</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"event.do\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">이벤트</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<main class=\"wrap\">\r\n");
      out.write("		<div class=\"grid\">\r\n");
      out.write("			<section class=\"panel\">\r\n");
      out.write("				<h3>영화관</h3>\r\n");
      out.write("				<div class=\"body\">\r\n");
      out.write("					<div class=\"region-section\">\r\n");
      out.write("						<div class=\"tag\">지역</div>\r\n");
      out.write("						<div class=\"list\">\r\n");
      out.write("							");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<hr class=\"line\">\r\n");
      out.write("					<div class=\"cinema-section\">\r\n");
      out.write("						<div class=\"tag\">영화관</div>\r\n");
      out.write("						<div class=\"list\" id=\"cinemaList\">\r\n");
      out.write("							<div class=\"empty-state\">지역을 먼저 선택해주세요</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</section>\r\n");
      out.write("\r\n");
      out.write("			<section class=\"panel\">\r\n");
      out.write("				<h3>영화 선택</h3>\r\n");
      out.write("				<div class=\"body\" id=\"movieList\">\r\n");
      out.write("					<div class=\"empty-state\">영화관을 먼저 선택해주세요</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</section>\r\n");
      out.write("\r\n");
      out.write("			<section class=\"panel\">\r\n");
      out.write("				<h3>영화 시간표</h3>\r\n");
      out.write("				<div class=\"body\">\r\n");
      out.write("					<div class=\"tag\">날짜</div>\r\n");
      out.write("					<div class=\"date-list\" id=\"date-list\">\r\n");
      out.write("						<div class=\"empty-state\">영화를 먼저 선택해주세요</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"selected-date\" id=\"selected-date\"></div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"tag\">시간</div>\r\n");
      out.write("					<div class=\"time-list\" id=\"time-list\">\r\n");
      out.write("						<div class=\"empty-state\">영화를 먼저 선택해주세요</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<button type=\"button\" class=\"final-btn\" onclick=\"goToSeat()\">예매\r\n");
      out.write("						하기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</section>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		let selectedMovieId = null;\r\n");
      out.write("		let selectedMovieTitle = null;\r\n");
      out.write("		let selectedCinemaId = null;\r\n");
      out.write("		let selectedCinemaName = null;\r\n");
      out.write("		let selectedMoviePrice = null;\r\n");
      out.write("		let selectedMoviePoster = null;\r\n");
      out.write("		let selectedDate = null;\r\n");
      out.write("		let selectedTime = null;\r\n");
      out.write("\r\n");
      out.write("		// 1. 지역 버튼 클릭 이벤트\r\n");
      out.write("		$(document).on('click', '.location-btn', function() {\r\n");
      out.write("			console.log('지역 버튼 클릭됨');\r\n");
      out.write("\r\n");
      out.write("			$('.location-btn').removeClass('active');\r\n");
      out.write("			$(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("			let location = $(this).data('location');\r\n");
      out.write("			console.log('선택된 지역:', location);\r\n");
      out.write("\r\n");
      out.write("			// 선택 정보 초기화\r\n");
      out.write("			resetSelections();\r\n");
      out.write("\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : 'CinemaListApiServlet',\r\n");
      out.write("				data : {\r\n");
      out.write("					'location' : location\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : changeCinema,\r\n");
      out.write("				error : function(xhr, status, error) {\r\n");
      out.write("					console.error('영화관 조회 실패:', error);\r\n");
      out.write("					console.error('상태:', status);\r\n");
      out.write("					console.error('응답:', xhr.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 2. 영화관 데이터 업데이트 함수\r\n");
      out.write("		function changeCinema(data) {\r\n");
      out.write("			console.log('Ajax 성공! 받은 데이터:', data);\r\n");
      out.write("			console.log('데이터 타입:', typeof data);\r\n");
      out.write("			console.log('데이터 키 개수:', Object.keys(data).length);\r\n");
      out.write("\r\n");
      out.write("			let cinemaListDiv = $('#cinemaList');\r\n");
      out.write("			cinemaListDiv.empty();\r\n");
      out.write("			\r\n");
      out.write("			if (!data || data.length == 0) {\r\n");
      out.write("		        cinemaListDiv.append('<div class=\"empty-state\">해당 지역에 영화관이 없습니다</div>');\r\n");
      out.write("		        return;\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("			for (let i = 0; i < data.length; i++) {\r\n");
      out.write("		        let cinema = data[i];  // 올바른 접근!\r\n");
      out.write("		        console.log('영화관 추가:', cinema.cinemaId, cinema.name); // 올바른 변수명!\r\n");
      out.write("\r\n");
      out.write("		        let newCinemaBtn = '<button type=\"button\" class=\"btn block ghost cinema-btn\" ' +\r\n");
      out.write("		                          'data-cinema-id=\"' + cinema.cinemaId + '\" ' +\r\n");
      out.write("		                          'data-cinema-name=\"' + cinema.name + '\">' +\r\n");
      out.write("		                          cinema.name + '</button>';\r\n");
      out.write("		        cinemaListDiv.append(newCinemaBtn);\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("		    console.log('총 ' + data.length + '개 영화관 추가 완료');\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 3. 영화관 선택 이벤트\r\n");
      out.write("		$(document).on('click', '.cinema-btn', function() {\r\n");
      out.write("			console.log('영화관 버튼 클릭됨');\r\n");
      out.write("\r\n");
      out.write("			$('.cinema-btn').removeClass('active');\r\n");
      out.write("			$(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("			selectedCinemaId = $(this).data('cinema-id');\r\n");
      out.write("			selectedCinemaName = $(this).data('cinema-name');\r\n");
      out.write("\r\n");
      out.write("			console.log('선택된 영화관 ID:', selectedCinemaId);\r\n");
      out.write("			console.log('선택된 영화관 이름:', selectedCinemaName);\r\n");
      out.write("\r\n");
      out.write("			// 영화관 변경 시 하위 선택 초기화\r\n");
      out.write("			resetMovieSelections();\r\n");
      out.write("\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : 'MovieListApiServlet',\r\n");
      out.write("				data : {\r\n");
      out.write("					'cinemaId' : selectedCinemaId\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : changeMovie,\r\n");
      out.write("				error : function(xhr, status, error) {\r\n");
      out.write("					console.error('영화 조회 실패:', error);\r\n");
      out.write("					console.error('상태:', status);\r\n");
      out.write("					console.error('응답:', xhr.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 4. 영화 목록 업데이트\r\n");
      out.write("		function changeMovie(data) {\r\n");
      out.write("			console.log('영화 데이터 받음:', data);\r\n");
      out.write("\r\n");
      out.write("			let movieListDiv = $('#movieList');\r\n");
      out.write("			movieListDiv.empty();\r\n");
      out.write("\r\n");
      out.write("			if (data.length == 0) {\r\n");
      out.write("				movieListDiv\r\n");
      out.write("						.append('<div class=\"empty-state\">상영할 수 있는 영화가 없습니다.</div>');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			for (let i = 0; i < data.length; i++) {\r\n");
      out.write("				let movie = data[i];\r\n");
      out.write("\r\n");
      out.write("				// moviePrice 값 확인 및 기본값 설정\r\n");
      out.write("				let moviePrice = movie.moviePrice || 14000;\r\n");
      out.write("				let moviePoster = movie.poster\r\n");
      out.write("						|| 'asset/images/movie_default.png';\r\n");
      out.write("\r\n");
      out.write("				console.log('영화 데이터:', movie);\r\n");
      out.write("\r\n");
      out.write("				let newMovie = '<div class=\"movie\" data-movie-id=\"'+ movie.movieId + \r\n");
      out.write("                '\" data-movie-title=\"' + movie.movieTitle + \r\n");
      out.write("                '\" data-movie-price=\"' + moviePrice + \r\n");
      out.write("                '\" data-movie-poster=\"' + moviePoster + '\">'\r\n");
      out.write("						+ '<img src=\"' + moviePoster + '\">'\r\n");
      out.write("						+ '<div class=\"content\">'\r\n");
      out.write("						+ '<div class=\"title\">'\r\n");
      out.write("						+ movie.movieTitle\r\n");
      out.write("						+ '</div>'\r\n");
      out.write("						+ '<div class=\"info\">'\r\n");
      out.write("						+ movie.genre\r\n");
      out.write("						+ ' • '\r\n");
      out.write("						+ movie.movieTime\r\n");
      out.write("						+ '분</div>'\r\n");
      out.write("						+ '</div></div>';\r\n");
      out.write("				movieListDiv.append(newMovie);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 5. 영화 선택 이벤트\r\n");
      out.write("		$(document).on('click', '.movie', function() {\r\n");
      out.write("			$('.movie').removeClass('active');\r\n");
      out.write("			$(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("			selectedMovieId = $(this).data('movie-id');\r\n");
      out.write("			selectedMovieTitle = $(this).data('movie-title');\r\n");
      out.write("			selectedMoviePrice = $(this).data('movie-price');\r\n");
      out.write("			selectedMoviePoster = $(this).data('movie-poster');\r\n");
      out.write("\r\n");
      out.write("			console.log('선택된 영화 정보:');\r\n");
      out.write("			console.log('- ID:', selectedMovieId);\r\n");
      out.write("			console.log('- 제목:', selectedMovieTitle);\r\n");
      out.write("			console.log('- 가격:', selectedMoviePrice);\r\n");
      out.write("			console.log('- 포스터:', selectedMoviePoster);\r\n");
      out.write("\r\n");
      out.write("			// 영화관이 선택되지 않았다면 경고\r\n");
      out.write("			if (!selectedCinemaId) {\r\n");
      out.write("				alert('영화관을 먼저 선택해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			// 날짜/시간 초기화\r\n");
      out.write("			resetDateTimeSelections();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : 'ShowDateListApiServlet',\r\n");
      out.write("				data : {\r\n");
      out.write("					'cinemaId' : selectedCinemaId,\r\n");
      out.write("					'movieId' : selectedMovieId\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : changeDate,\r\n");
      out.write("				error : function(xhr, status, error) {\r\n");
      out.write("					console.error('날짜 조회 실패:', error);\r\n");
      out.write("					console.error('상태:', status);\r\n");
      out.write("					console.error('응답:', xhr.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 6. 날짜 업데이트\r\n");
      out.write("		function changeDate(data) {\r\n");
      out.write("			console.log('날짜 데이터 받음:', data);\r\n");
      out.write("\r\n");
      out.write("			let dateListDiv = $('#date-list');\r\n");
      out.write("			dateListDiv.empty();\r\n");
      out.write("\r\n");
      out.write("			if (!data || !data.dates || data.dates.length == 0) {\r\n");
      out.write("				dateListDiv\r\n");
      out.write("						.append('<div class=\"empty-state\">상영할 수 있는 날짜가 없습니다.</div>');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			for (let i = 0; i < data.dates.length; i++) {\r\n");
      out.write("				let date = data.dates[i];\r\n");
      out.write("				let newDateBtn = '<button type=\"button\" class=\"date-btn\" data-date=\"' + date + '\">'\r\n");
      out.write("						+ date + '</button>';\r\n");
      out.write("				dateListDiv.append(newDateBtn);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 7. 날짜 선택 이벤트\r\n");
      out.write("		$(document).on('click', '.date-btn', function() {\r\n");
      out.write("			console.log('날짜 버튼 클릭됨')\r\n");
      out.write("\r\n");
      out.write("			$('.date-btn').removeClass('active');\r\n");
      out.write("			$(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("			selectedDate = $(this).data(\"date\");\r\n");
      out.write("			console.log('선택된 날짜:', selectedDate);\r\n");
      out.write("\r\n");
      out.write("			selectedTime = null;\r\n");
      out.write("			$('#time-list').empty();\r\n");
      out.write("\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : 'ShowTimeListApiServlet',\r\n");
      out.write("				data : {\r\n");
      out.write("					'cinemaId' : selectedCinemaId,\r\n");
      out.write("					'movieId' : selectedMovieId,\r\n");
      out.write("					\"date\" : selectedDate\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : changeTime,\r\n");
      out.write("				error : function(xhr, status, error) {\r\n");
      out.write("					console.error('시간 조회 실패:', error);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 8. 시간 업데이트\r\n");
      out.write("		function changeTime(data) {\r\n");
      out.write("			console.log('시간 데이터 받음:', data);\r\n");
      out.write("\r\n");
      out.write("			let timeListDiv = $('#time-list');\r\n");
      out.write("			timeListDiv.empty();\r\n");
      out.write("\r\n");
      out.write("			if (!data || !data.times || data.times.length == 0) {\r\n");
      out.write("				timeListDiv\r\n");
      out.write("						.append('<div class=\"empty-state\">상영할 수 있는 시간이 없습니다.</div>');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			for (let i = 0; i < data.times.length; i++) {\r\n");
      out.write("				let time = data.times[i];\r\n");
      out.write("				let newTimeBtn = '<div class=\"time\" data-time=\"' + time + '\">'\r\n");
      out.write("						+ time + '</div>';\r\n");
      out.write("				timeListDiv.append(newTimeBtn);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 9. 시간 선택 이벤트\r\n");
      out.write("		$(document).on('click', '.time', function() {\r\n");
      out.write("			$('.time').removeClass('active');\r\n");
      out.write("			$(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("			selectedTime = $(this).data('time');\r\n");
      out.write("			console.log('선택된 시간:', selectedTime);\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		function goToSeat() {\r\n");
      out.write("			// 모든 필수 정보가 선택되었는지 확인\r\n");
      out.write("			if (!selectedCinemaId) {\r\n");
      out.write("				alert('영화관을 선택해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (!selectedMovieId) {\r\n");
      out.write("				alert('영화를 선택해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (!selectedDate) {\r\n");
      out.write("				alert('날짜를 선택해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (!selectedTime) {\r\n");
      out.write("				alert('상영 시간을 선택해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			// moviePrice가 undefined인 경우 기본값 설정\r\n");
      out.write("			let finalMoviePrice = selectedMoviePrice || 14000;\r\n");
      out.write("\r\n");
      out.write("			const params = new URLSearchParams({\r\n");
      out.write("				cinemaId : selectedCinemaId || '',\r\n");
      out.write("				cinemaName : selectedCinemaName || '',\r\n");
      out.write("				movieId : selectedMovieId || '',\r\n");
      out.write("				movieTitle : selectedMovieTitle || '',\r\n");
      out.write("				moviePrice : finalMoviePrice,\r\n");
      out.write("				moviePoster : selectedMoviePoster\r\n");
      out.write("						|| 'asset/images/movie_default.png',\r\n");
      out.write("				date : selectedDate || '',\r\n");
      out.write("				time : selectedTime || ''\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			console.log('전달할 파라미터:', params.toString());\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			window.location.href = 'ReserveServlet?' + params.toString();\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 선택 정보 초기화 함수들\r\n");
      out.write("		function resetSelections() {\r\n");
      out.write("			resetMovieSelections();\r\n");
      out.write("			$('#cinemaList').html(\r\n");
      out.write("					'<div class=\"empty-state\">지역을 먼저 선택해주세요</div>');\r\n");
      out.write("			selectedCinemaId = null;\r\n");
      out.write("			selectedCinemaName = null;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function resetMovieSelections() {\r\n");
      out.write("			resetDateTimeSelections();\r\n");
      out.write("			$('#movieList').html(\r\n");
      out.write("					'<div class=\"empty-state\">영화관을 먼저 선택해주세요</div>');\r\n");
      out.write("			selectedMovieId = null;\r\n");
      out.write("			selectedMovieTitle = null;\r\n");
      out.write("			selectedMoviePrice = null;\r\n");
      out.write("			selectedMoviePoster = null;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function resetDateTimeSelections() {\r\n");
      out.write("			$('#date-list')\r\n");
      out.write("					.html('<div class=\"empty-state\">영화를 먼저 선택해주세요</div>');\r\n");
      out.write("			$('#time-list')\r\n");
      out.write("					.html('<div class=\"empty-state\">영화를 먼저 선택해주세요</div>');\r\n");
      out.write("			selectedDate = null;\r\n");
      out.write("			selectedTime = null;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /reserve.jsp(365,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("locations");
    // /reserve.jsp(365,7) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/reserve.jsp(365,7) ''",_jsp_getExpressionFactory().createValueExpression("",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /reserve.jsp(366,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("cinema");
    // /reserve.jsp(366,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/reserve.jsp(366,7) '${cinemaList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${cinemaList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /reserve.jsp(367,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not fn:contains(locations, cinema.location)}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("									<button type=\"button\" class=\"btn block location-btn\"\r\n");
        out.write("										data-location=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cinema.location}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cinema.location}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</button>\r\n");
        out.write("									");
        if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("								");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
    // /reserve.jsp(371,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("locations");
    // /reserve.jsp(371,9) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/reserve.jsp(371,9) '${locations}${cinema.location},'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${locations}${cinema.location},",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }
}
